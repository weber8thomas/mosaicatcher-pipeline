name: Workflow checks

on:
  push:
    branches:
      - master
      - smk_workflow_catalog

jobs:
  # WORK
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Downloading data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd"
          args: "--cores 1 --config mode=download_data dl_external_files=True dl_bam_example=True input_bam_location=TEST_EXAMPLE_DATA/"

      - name: Linting
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd"
          args: "--lint"

  Testing:
    runs-on: ubuntu-latest
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v1

      - name: Downloading data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd"
          args: "--cores 1 --config mode=download_data dl_external_files=True dl_bam_example=True input_bam_location=TEST_EXAMPLE_DATA/"

      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: 'mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick "singularity<=3.8.6" && source activate snakemake && ls -lh'
          args: '--cores -12 --config chromosomes="[chr21]" mode=mosaiclassifier plot=True input_bam_location=TEST_EXAMPLE_DATA/ output_location=TEST_OUTPUT/ containerized=True --use-conda --use-singularity --latency-wait 60'
