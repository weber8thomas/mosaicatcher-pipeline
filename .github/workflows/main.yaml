name: Tests

on:
  push:
    branches:
      - smk_workflow_catalog
      - master
    # paths:
    #   - "github-actions-runner/Dockerfile"

jobs:
  build_container:
    name: Build and push image
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: mosaicatcher-pipeline

    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Read upstream tag without version
        id: gettag
        run: echo "::set-output name=tag::$(head -n 1 github-actions-runner/Dockerfile | awk -F':' '{print $2}' | awk -F'-' 'BEGIN { OFS="-" } {$NF=""; print $0}')"

      - name: Read internal update version
        id: getversion
        run: echo "::set-output name=version::$(grep 'ARG RUNNER_VERSION' github-actions-runner/Dockerfile | awk -F'=' '{print $2}')"

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest dev 1.3
          dockerfiles: |
            ./github-actions-runner/Dockerfile

      - name: Push To DockerHub
        id: push-to-dockerhub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io/weber8thomas
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Use the image
        run: echo "New images has been pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
  # jobs:
  test_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      # - name: Setup Snakemake environment
      #   run: |
      #     export PATH="/usr/share/miniconda/bin:$PATH"
      #     conda config --set channel_priority strict
      #     conda install -c conda-forge -q mamba
      #     # ensure that mamba is happy to write into the cache
      #     sudo chown -R runner:docker /usr/share/miniconda/pkgs/cache
      #     # additionally add singularity
      #     # TODO remove version constraint: needed because 3.8.7 fails with missing libz:
      #     # bin/unsquashfs: error while loading shared libraries: libz.so.1: cannot open shared object file: No such file or directory
      #     # mamba create -y -n mosaicatcher_env -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick "singularity<=3.8.6"
      #     # source activate mosaicatcher_env
      #     # conda list
      #     # which python
      #     # python -c 'import pysam; print(pysam)'
      - name: Downloading data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .test
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake"
          args: "--cores 1 --config mode=download_data dl_external_files=True dl_bam_example=True input_bam_location=TEST_EXAMPLE_DATA/"
      - name: Test data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .test
          snakefile: ./Snakefile
          stagein: 'mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick "singularity<=3.8.6" && source activate snakemake && ls -lh'
          args: "--cores 1 --config plot=True input_bam_location=TEST_EXAMPLE_DATA/ output_location=TEST_OUTPUT/ --use-conda --use-singularity"

  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Formatting
        uses: github/super-linter@v3.16.1
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: smk_workflow_catalog
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Downloading data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .test
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd"
          args: "--cores 1 --config mode=download_data dl_external_files=True dl_bam_example=True input_bam_location=TEST_EXAMPLE_DATA/ --touch"
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: ".test"
          snakefile: ./Snakefile
          stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd"
          args: "--lint"
