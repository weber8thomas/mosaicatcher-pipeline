name: Workflow checks

on:
  push:
    branches:
      - master
      - smk_workflow_catalog

jobs:
  # WORK
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Linting
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: 'file=$(grep snv_sites ./config/config.yaml| grep -P -o "sandbox.*") && mkdir -p "${file%/*}" && touch "$file" && file=$(grep -P "^reference" mosaicatcher-update/config/config.yaml| grep -P -o "sandbox.*") && mkdir -p "${file%/*}" && touch "$file" && mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake && ls -l && pwd'
          args: "--lint"

  Testing:
    runs-on: ubuntu-latest
    # runs-on: self-hosted
    # needs:
    #   - Linting
    #   - Formatting
    steps:
      - uses: actions/checkout@v1

      # - name: Downloading data
      #   uses: snakemake/snakemake-github-action@v1.22.0
      #   with:
      #     directory: .
      #     snakefile: ./Snakefile
      #     stagein: "mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda unzip snakemake pandas pysam tqdm imagemagick && source activate snakemake "
      #     args: "--cores 1 --config mode=download_data dl_external_files=True"

      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.22.0
        with:
          directory: .
          snakefile: ./Snakefile
          stagein: " mamba env remove -n snakemake && mamba create -y -n snakemake -c conda-forge -c bioconda snakemake pandas pysam tqdm imagemagick && source activate snakemake  && conda create -f .test/conda/complete_env.yaml && source activate cpp_copy && cd workflow/scripts/Mosaic/ && mkdir build && cmake ../src/ && cmake --build . && ln -s mosaic /usr/local/sbin/mosaic"
          args: '--cores -12 --config chromosomes="[chr21]" mode=mosaiclassifier plot=True input_bam_location=.test/data/ output_location=.test/output/ --use-conda --latency-wait 60'
